# general settings
name: train_mask_guided_jdnsr_x2_3dircadb
model_type: Mask_Guided_Model
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10
scale: 2

# dataset and data loader settings
datasets:
  train:
    name: 3dircadb_train
    type: PairedMASKDataset
    dataroot_gt: /home/zhiyi/data/3dircadb/img/hr_nd/train
    dataroot_gt_lr: /home/zhiyi/data/3dircadb/img/lr_nd/x2/train
    dataroot_lq: /home/zhiyi/data/3dircadb/img/lr_ld/x2/train
    dataroot_mask: /home/zhiyi/data/3dircadb/mask/x2/train
    dataroot_avg_ct: /home/zhiyi/data/3dircadb/img/lr_ld/x2/train_avg

    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 128
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: 3dircadb_val
    type: PairedMASKDataset
    dataroot_gt: /home/zhiyi/data/3dircadb/img/hr_nd/val
    dataroot_gt_lr: /home/zhiyi/data/3dircadb/img/lr_nd/x2/val
    dataroot_lq: /home/zhiyi/data/3dircadb/img/lr_ld/x2/val
    dataroot_mask: /home/zhiyi/data/3dircadb/mask/x2/val
    dataroot_avg_ct: /home/zhiyi/data/3dircadb/img/lr_ld/x2/val_avg
    io_backend:
      type: disk

# network structures
network_g:
  type: MaskGuidedJDNSR
  scale: 2
  num_feat: 64
  mode: jdnsr
  num_block: 10

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [200000, 400000]
    gamma: 0.5

  total_iter: 250000
  warmup_iter: -1  # no warm up

  # losses
  hrLD_pixel_opt:
    type: L1Loss
    loss_weight: 0.2
    reduction: mean

  LRnd_pixel_opt:
    type: L1Loss
    loss_weight: 0.2
    reduction: mean

  hrnd_pixel_opt:
    type: L1Loss
    loss_weight: 1.0

#  tv_opt:
#    type: WeightedTVLoss
#    loss_weight: 0.2

# validation settings
val:
  val_freq: !!float 1e4
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true

    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
